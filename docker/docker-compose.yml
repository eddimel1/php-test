
services:
  web:
    image: nginx:alpine
    container_name: ${NGINX_CONTAINER_NAME}
    restart: unless-stopped
    ports:
      - "${NGINX_OUT_PORT}:80"
    volumes:
            - ../src:/var/www/html
            - ./nginx/templates/:/etc/nginx/templates/
            
    environment:
      - PHP_FPM_CONTAINER_NAME=${PHP_FPM_CONTAINER_NAME}
      - PHP_FPM_OUT_PORT=${PHP_FPM_OUT_PORT}
    
    depends_on:
      - fpm
    
    networks:
    - test-network

  fpm:
    container_name: ${PHP_FPM_CONTAINER_NAME}
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        PHP_FPM_OUT_PORT: ${PHP_FPM_OUT_PORT}
    environment:
      - PHP_FPM_OUT_PORT=${PHP_FPM_OUT_PORT}
    depends_on:
      - db
    volumes:
      - ../src:/var/www/html
      - ./wwz.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - test-network
  

  db:
    image: postgres:15
    container_name: ${DB_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_OUT_PORT}:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - test-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: ${PG_ADMIN_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "${PG_ADMIN_OUT_PORT}:80"
    depends_on:
      - db
    user: root
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    volumes:
      - ./pgAdmin/pgpass:/pgpass
      - ./pgAdmin/servers.json:/pgadmin4/servers.json
    networks:
      - test-network    
 
networks:
    test-network:
        driver: bridge

    